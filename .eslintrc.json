{
  "env": {
    "browser": true,
    "es6": true,
    "jest": true,
    "node": true
  },
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "react-hooks"
  ],
  "rules": {
    "semi": [
      "error",
      "always"
    ],
    "no-empty": ["error", { "allowEmptyCatch": true }],
    "comma-dangle": "off",
    "quotes": "off",
    "max-len": "off",
    "space-before-function-paren": "off",
    "sort-imports": [
      "off"
    ],
    "import/no-unresolved": [
      "off"
    ],
    "import/no-named-as-default": [
      "off"
    ],
    "react/prop-types": [
      "off"
    ],
    "react/display-name": [
      "off"
    ],
    "react-hooks/exhaustive-deps": "off",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "never",
        "children": "never"
      }
    ],
    "generator-star-spacing": [
      "off"
    ],
    "@typescript-eslint/explicit-module-boundary-types": [
      "off"
    ],
    "@typescript-eslint/no-non-null-assertion": [
      "off"
    ],
    "@typescript-eslint/no-explicit-any": [
      "off"
    ],
    "@typescript-eslint/no-var-requires": [
      "off"
    ],
    "@typescript-eslint/ban-ts-comment": [
      "off"
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "{}": false,
          "Object": false,
          "object": false,
          "Function": {
            "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`",
            "fixWith": "() => void"
          },
          "Boolean": {
            "message": "Avoid using the `Boolean` type. Did you mean `boolean`?",
            "fixWith": "boolean"
          },
          "Number": {
            "message": "Avoid using the `Number` type. Did you mean `number`?",
            "fixWith": "number"
          },
          "String": {
            "message": "Avoid using the `String` type. Did you mean `string`?",
            "fixWith": "string"
          },
          "Symbol": {
            "message": "Avoid using the `Symbol` type. Did you mean `symbol`?",
            "fixWith": "symbol"
          }
        }
      }
    ],
    "no-console": [
      "warn"
    ],
    "eol-last": [
      "error"
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error"],
    "object-curly-newline": "off",
    "object-curly-spacing": [
      "error",
      "always",
      {
        "arraysInObjects": true,
        "objectsInObjects": true
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "external",
          "builtin",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always-and-inside-groups",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/newline-after-import": [
      "error"
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1
      }
    ],
    "indent": "off",
    "object-shorthand": [
      "error",
      "always"
    ],
    "no-useless-rename": [
      "error",
      {
        "ignoreDestructuring": false,
        "ignoreImport": false,
        "ignoreExport": false
      }
    ],
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ]
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}


